"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const output_big_number_formatter_1 = require("./output-big-number-formatter");
const output_transaction_formatter_1 = require("./output-transaction-formatter");
const util_1 = require("util");
/**
 * Formats the output of a block to its proper values
 *
 * @method outputBlockFormatter
 * @param {Object} block
 * @returns {Object}
 */
function outputBlockFormatter(block) {
    // transform to number
    block.gasLimit = utils_1.hexToNumber(block.gasLimit);
    block.gasUsed = utils_1.hexToNumber(block.gasUsed);
    block.size = utils_1.hexToNumber(block.size);
    block.timestamp = utils_1.hexToNumber(block.timestamp);
    if (block.number !== null)
        block.number = utils_1.hexToNumber(block.number);
    if (block.difficulty)
        block.difficulty = output_big_number_formatter_1.outputBigNumberFormatter(block.difficulty);
    if (block.totalDifficulty)
        block.totalDifficulty = output_big_number_formatter_1.outputBigNumberFormatter(block.totalDifficulty);
    if (util_1.isArray(block.transactions)) {
        block.transactions.forEach(function (item) {
            if (!util_1.isString(item))
                return output_transaction_formatter_1.outputTransactionFormatter(item);
        });
    }
    if (block.miner)
        block.miner = utils_1.toChecksumAddress(block.miner);
    return block;
}
exports.outputBlockFormatter = outputBlockFormatter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3V0cHV0LWJsb2NrLWZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb3JtYXR0ZXJzL291dHB1dC1ibG9jay1mb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7RUFlRTs7QUFFRixvQ0FBMEQ7QUFDMUQsK0VBQXlFO0FBQ3pFLGlGQUE0RTtBQUM1RSwrQkFBeUM7QUFFekM7Ozs7OztHQU1HO0FBQ0gsU0FBZ0Isb0JBQW9CLENBQUMsS0FBSztJQUN4QyxzQkFBc0I7SUFDdEIsS0FBSyxDQUFDLFFBQVEsR0FBRyxtQkFBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxLQUFLLENBQUMsT0FBTyxHQUFHLG1CQUFXLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNDLEtBQUssQ0FBQyxJQUFJLEdBQUcsbUJBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsS0FBSyxDQUFDLFNBQVMsR0FBRyxtQkFBVyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvQyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssSUFBSTtRQUFFLEtBQUssQ0FBQyxNQUFNLEdBQUcsbUJBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFcEUsSUFBSSxLQUFLLENBQUMsVUFBVTtRQUFFLEtBQUssQ0FBQyxVQUFVLEdBQUcsc0RBQXdCLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BGLElBQUksS0FBSyxDQUFDLGVBQWU7UUFBRSxLQUFLLENBQUMsZUFBZSxHQUFHLHNEQUF3QixDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUVuRyxJQUFJLGNBQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUU7UUFDL0IsS0FBSyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsVUFBUyxJQUFJO1lBQ3RDLElBQUksQ0FBQyxlQUFRLENBQUMsSUFBSSxDQUFDO2dCQUFFLE9BQU8seURBQTBCLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDL0QsQ0FBQyxDQUFDLENBQUM7S0FDSjtJQUVELElBQUksS0FBSyxDQUFDLEtBQUs7UUFBRSxLQUFLLENBQUMsS0FBSyxHQUFHLHlCQUFpQixDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUU5RCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFwQkQsb0RBb0JDIn0=