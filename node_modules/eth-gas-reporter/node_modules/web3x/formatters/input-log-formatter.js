"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const input_block_number_formatter_1 = require("./input-block-number-formatter");
const util_1 = require("util");
const input_address_formatter_1 = require("./input-address-formatter");
/**
 * Formats the input of a log
 *
 * @method inputLogFormatter
 * @param {Object} log object
 * @returns {Object} log
 */
function inputLogFormatter(options = {}) {
    let formattedLogOptions = {};
    if (options.fromBlock !== undefined) {
        formattedLogOptions.fromBlock = input_block_number_formatter_1.inputBlockNumberFormatter(options.fromBlock);
    }
    if (options.toBlock !== undefined) {
        formattedLogOptions.toBlock = input_block_number_formatter_1.inputBlockNumberFormatter(options.toBlock);
    }
    // Convert topics to hex.
    formattedLogOptions.topics = (options.topics || []).map(topic => {
        const toTopic = function (value) {
            if (value === null || typeof value === 'undefined')
                return null;
            value = String(value);
            return value.indexOf('0x') === 0 ? value : utils_1.utf8ToHex(value);
        };
        return util_1.isArray(topic) ? topic.map(toTopic) : toTopic(topic);
    });
    if (options.address) {
        formattedLogOptions.address = util_1.isArray(options.address)
            ? options.address.map(input_address_formatter_1.inputAddressFormatter)
            : input_address_formatter_1.inputAddressFormatter(options.address);
    }
    return formattedLogOptions;
}
exports.inputLogFormatter = inputLogFormatter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbG9nLWZvcm1hdHRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mb3JtYXR0ZXJzL2lucHV0LWxvZy1mb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7Ozs7RUFlRTs7QUFFRixvQ0FBcUM7QUFDckMsaUZBQTJFO0FBQzNFLCtCQUErQjtBQUMvQix1RUFBa0U7QUFrQmxFOzs7Ozs7R0FNRztBQUNILFNBQWdCLGlCQUFpQixDQUFDLFVBQXlCLEVBQUU7SUFDM0QsSUFBSSxtQkFBbUIsR0FBMkIsRUFBRSxDQUFDO0lBRXJELElBQUksT0FBTyxDQUFDLFNBQVMsS0FBSyxTQUFTLEVBQUU7UUFDbkMsbUJBQW1CLENBQUMsU0FBUyxHQUFHLHdEQUF5QixDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUM5RTtJQUVELElBQUksT0FBTyxDQUFDLE9BQU8sS0FBSyxTQUFTLEVBQUU7UUFDakMsbUJBQW1CLENBQUMsT0FBTyxHQUFHLHdEQUF5QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUMxRTtJQUVELHlCQUF5QjtJQUN6QixtQkFBbUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM5RCxNQUFNLE9BQU8sR0FBRyxVQUFTLEtBQUs7WUFDNUIsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLE9BQU8sS0FBSyxLQUFLLFdBQVc7Z0JBQUUsT0FBTyxJQUFJLENBQUM7WUFDaEUsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUN0QixPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLGlCQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUQsQ0FBQyxDQUFDO1FBQ0YsT0FBTyxjQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5RCxDQUFDLENBQUMsQ0FBQztJQUVILElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRTtRQUNuQixtQkFBbUIsQ0FBQyxPQUFPLEdBQUcsY0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUM7WUFDcEQsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLCtDQUFxQixDQUFDO1lBQzVDLENBQUMsQ0FBQywrQ0FBcUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDNUM7SUFFRCxPQUFPLG1CQUFtQixDQUFDO0FBQzdCLENBQUM7QUE1QkQsOENBNEJDIn0=