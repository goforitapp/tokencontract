"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../utils");
const formatters_1 = require("../formatters");
const identity = result => result;
class PersonalRequestPayloads {
    getAccounts() {
        return {
            method: 'personalListAccounts',
            format: result => result.map(utils_1.toChecksumAddress),
        };
    }
    newAccount(password) {
        return {
            method: 'personalListAccounts',
            params: [password],
            format: utils_1.toChecksumAddress,
        };
    }
    unlockAccount(address, password, duration) {
        return {
            method: 'personal_unlockAccount',
            params: [formatters_1.inputAddressFormatter(address), password, duration],
            format: identity,
        };
    }
    lockAccount(address) {
        return {
            method: 'personal_lockAccount',
            params: [formatters_1.inputAddressFormatter(address)],
            format: identity,
        };
    }
    importRawKey(privateKey, password) {
        return {
            method: 'personal_importRawKey',
            params: [privateKey, password],
            format: identity,
        };
    }
    sendTransaction(tx, password) {
        return {
            method: 'personal_sendTransaction',
            params: [formatters_1.inputTransactionFormatter(tx), password],
            format: identity,
        };
    }
    signTransaction(tx, password) {
        return {
            method: 'personal_signTransaction',
            params: [formatters_1.inputTransactionFormatter(tx), password],
            format: identity,
        };
    }
    sign(data, address, password) {
        return {
            method: 'personal_sign',
            params: [formatters_1.inputSignFormatter(data), formatters_1.inputAddressFormatter(address), password],
            format: identity,
        };
    }
    ecRecover(data, signedData) {
        return {
            method: 'personal_ecRecover',
            params: [formatters_1.inputSignFormatter(data), signedData],
            format: identity,
        };
    }
}
exports.PersonalRequestPayloads = PersonalRequestPayloads;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uYWwtcmVxdWVzdC1wYXlsb2Fkcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wZXJzb25hbC9wZXJzb25hbC1yZXF1ZXN0LXBheWxvYWRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0VBZUU7O0FBRUYsb0NBQTZDO0FBQzdDLDhDQUFxRztBQUlyRyxNQUFNLFFBQVEsR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztBQUVsQyxNQUFhLHVCQUF1QjtJQUNsQyxXQUFXO1FBQ1QsT0FBTztZQUNMLE1BQU0sRUFBRSxzQkFBc0I7WUFDOUIsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyx5QkFBaUIsQ0FBQztTQUNoRCxDQUFDO0lBQ0osQ0FBQztJQUVELFVBQVUsQ0FBQyxRQUFnQjtRQUN6QixPQUFPO1lBQ0wsTUFBTSxFQUFFLHNCQUFzQjtZQUM5QixNQUFNLEVBQUUsQ0FBQyxRQUFRLENBQUM7WUFDbEIsTUFBTSxFQUFFLHlCQUFpQjtTQUMxQixDQUFDO0lBQ0osQ0FBQztJQUVELGFBQWEsQ0FBQyxPQUFnQixFQUFFLFFBQWdCLEVBQUUsUUFBa0I7UUFDbEUsT0FBTztZQUNMLE1BQU0sRUFBRSx3QkFBd0I7WUFDaEMsTUFBTSxFQUFFLENBQUMsa0NBQXFCLENBQUMsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLFFBQVEsQ0FBQztZQUM1RCxNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFnQjtRQUMxQixPQUFPO1lBQ0wsTUFBTSxFQUFFLHNCQUFzQjtZQUM5QixNQUFNLEVBQUUsQ0FBQyxrQ0FBcUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUN4QyxNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUVELFlBQVksQ0FBQyxVQUFnQixFQUFFLFFBQWdCO1FBQzdDLE9BQU87WUFDTCxNQUFNLEVBQUUsdUJBQXVCO1lBQy9CLE1BQU0sRUFBRSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUM7WUFDOUIsTUFBTSxFQUFFLFFBQVE7U0FDakIsQ0FBQztJQUNKLENBQUM7SUFFRCxlQUFlLENBQUMsRUFBZSxFQUFFLFFBQWdCO1FBQy9DLE9BQU87WUFDTCxNQUFNLEVBQUUsMEJBQTBCO1lBQ2xDLE1BQU0sRUFBRSxDQUFDLHNDQUF5QixDQUFDLEVBQUUsQ0FBQyxFQUFFLFFBQVEsQ0FBQztZQUNqRCxNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztJQUVELGVBQWUsQ0FBQyxFQUFlLEVBQUUsUUFBZ0I7UUFDL0MsT0FBTztZQUNMLE1BQU0sRUFBRSwwQkFBMEI7WUFDbEMsTUFBTSxFQUFFLENBQUMsc0NBQXlCLENBQUMsRUFBRSxDQUFDLEVBQUUsUUFBUSxDQUFDO1lBQ2pELE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVUsRUFBRSxPQUFnQixFQUFFLFFBQWdCO1FBQ2pELE9BQU87WUFDTCxNQUFNLEVBQUUsZUFBZTtZQUN2QixNQUFNLEVBQUUsQ0FBQywrQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBRSxrQ0FBcUIsQ0FBQyxPQUFPLENBQUMsRUFBRSxRQUFRLENBQUM7WUFDNUUsTUFBTSxFQUFFLFFBQVE7U0FDakIsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLENBQUMsSUFBVSxFQUFFLFVBQWdCO1FBQ3BDLE9BQU87WUFDTCxNQUFNLEVBQUUsb0JBQW9CO1lBQzVCLE1BQU0sRUFBRSxDQUFDLCtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFLFVBQVUsQ0FBQztZQUM5QyxNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDO0lBQ0osQ0FBQztDQUNGO0FBdkVELDBEQXVFQyJ9