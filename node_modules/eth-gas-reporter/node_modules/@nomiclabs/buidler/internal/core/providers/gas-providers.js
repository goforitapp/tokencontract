"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wrapper_1 = require("./wrapper");
function createFixedGasProvider(provider, gasLimit) {
    return wrapper_1.wrapSend(provider, async (method, params) => {
        if (method === "eth_estimateGas") {
            return gasLimit;
        }
        if (method === "eth_sendTransaction") {
            const tx = params[0];
            if (tx !== undefined && tx.gas === undefined) {
                tx.gas = gasLimit;
            }
        }
        return provider.send(method, params);
    });
}
exports.createFixedGasProvider = createFixedGasProvider;
function createFixedGasPriceProvider(provider, gasPrice) {
    return wrapper_1.wrapSend(provider, async (method, params) => {
        if (method === "eth_gasPrice") {
            return gasPrice;
        }
        if (method === "eth_sendTransaction") {
            const tx = params[0];
            if (tx !== undefined && tx.gasPrice === undefined) {
                tx.gasPrice = gasPrice;
            }
        }
        return provider.send(method, params);
    });
}
exports.createFixedGasPriceProvider = createFixedGasPriceProvider;
function createAutomaticGasProvider(provider, gasMultiplier = 1.25) {
    return wrapper_1.wrapSend(provider, async (method, params) => {
        if (method === "eth_sendTransaction") {
            const tx = params[0];
            if (tx !== undefined && tx.gas === undefined) {
                const gas = await provider.send("eth_estimateGas", params);
                tx.gas = Math.floor(gas * gasMultiplier);
            }
        }
        return provider.send(method, params);
    });
}
exports.createAutomaticGasProvider = createAutomaticGasProvider;
function createAutomaticGasPriceProvider(provider) {
    return wrapper_1.wrapSend(provider, async (method, params) => {
        if (method === "eth_sendTransaction") {
            const tx = params[0];
            if (tx !== undefined && tx.gasPrice === undefined) {
                tx.gasPrice = await provider.send("eth_gasPrice");
            }
        }
        return provider.send(method, params);
    });
}
exports.createAutomaticGasPriceProvider = createAutomaticGasPriceProvider;
//# sourceMappingURL=gas-providers.js.map