"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_extra_1 = __importDefault(require("fs-extra"));
const config_env_1 = require("../internal/core/config/config-env");
const errors_1 = require("../internal/core/errors");
const scripts_runner_1 = require("../internal/util/scripts-runner");
const task_names_1 = require("./task-names");
function default_1() {
    config_env_1.task(task_names_1.TASK_RUN, "Runs a user-defined script after compiling the project")
        .addPositionalParam("script", "A js file to be run within buidler's environment")
        .addFlag("noCompile", "Don't compile before running this task")
        .setAction(async ({ script, noCompile }, { run }) => {
        if (!(await fs_extra_1.default.pathExists(script))) {
            throw new errors_1.BuidlerError(errors_1.ERRORS.BUILTIN_TASKS.RUN_FILE_NOT_FOUND, script);
        }
        if (!noCompile) {
            await run(task_names_1.TASK_COMPILE);
        }
        try {
            const statusCode = await scripts_runner_1.runScriptWithBuidler(script);
            process.exit(statusCode);
        }
        catch (error) {
            throw new errors_1.BuidlerError(errors_1.ERRORS.BUILTIN_TASKS.RUN_SCRIPT_ERROR, error, script, error.message);
        }
    });
}
exports.default = default_1;
//# sourceMappingURL=run.js.map