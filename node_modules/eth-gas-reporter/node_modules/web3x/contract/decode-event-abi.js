"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const abi_1 = require("./abi");
/**
 * Decodes any event log response and its return values.
 *
 * @param contractAbi Abi definition of the contract to which the event belongs.
 * @param log The log response to decode.
 * @returns The decoded event log.
 */
function decodeAnyEvent(contractAbi, log) {
    const anonymousEvent = {
        type: 'event',
        anonymous: true,
        inputs: [],
    };
    const event = contractAbi.find(abiDef => abiDef.signature === log.topics[0]) || anonymousEvent;
    return decodeEvent(event, log);
}
exports.decodeAnyEvent = decodeAnyEvent;
/**
 * Decodes an event log response and its return values.
 *
 * @param event Abi definition of event.
 * @param log The log response to decode.
 * @returns The decoded event log.
 */
function decodeEvent(event, log) {
    log.data = log.data || '';
    log.topics = log.topics || [];
    const argTopics = event.anonymous ? log.topics : log.topics.slice(1);
    const returnValues = abi_1.abi.decodeLog(event.inputs, log.data, argTopics);
    delete returnValues.__length__;
    const { data, topics } = log, formattedLog = tslib_1.__rest(log, ["data", "topics"]);
    return Object.assign({}, formattedLog, { event: event.name, returnValues, signature: event.anonymous || !log.topics[0] ? null : log.topics[0], raw: {
            data,
            topics,
        } });
}
exports.decodeEvent = decodeEvent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb2RlLWV2ZW50LWFiaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250cmFjdC9kZWNvZGUtZXZlbnQtYWJpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0VBZUU7OztBQUVGLCtCQUE0QjtBQUs1Qjs7Ozs7O0dBTUc7QUFDSCxTQUFnQixjQUFjLENBQUMsV0FBd0IsRUFBRSxHQUFRO0lBQy9ELE1BQU0sY0FBYyxHQUFrQjtRQUNwQyxJQUFJLEVBQUUsT0FBTztRQUNiLFNBQVMsRUFBRSxJQUFJO1FBQ2YsTUFBTSxFQUFFLEVBQUU7S0FDWCxDQUFDO0lBQ0YsTUFBTSxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLGNBQWMsQ0FBQztJQUMvRixPQUFPLFdBQVcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDakMsQ0FBQztBQVJELHdDQVFDO0FBRUQ7Ozs7OztHQU1HO0FBQ0gsU0FBZ0IsV0FBVyxDQUFDLEtBQW9CLEVBQUUsR0FBUTtJQUN4RCxHQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxJQUFJLElBQUksRUFBRSxDQUFDO0lBQzFCLEdBQUcsQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUM7SUFFOUIsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDckUsTUFBTSxZQUFZLEdBQUcsU0FBRyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEUsT0FBTyxZQUFZLENBQUMsVUFBVSxDQUFDO0lBRS9CLE1BQU0sRUFBRSxJQUFJLEVBQUUsTUFBTSxLQUFzQixHQUFHLEVBQXZCLHNEQUF1QixDQUFDO0lBRTlDLHlCQUNLLFlBQVksSUFDZixLQUFLLEVBQUUsS0FBSyxDQUFDLElBQUksRUFDakIsWUFBWSxFQUNaLFNBQVMsRUFBRSxLQUFLLENBQUMsU0FBUyxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUNuRSxHQUFHLEVBQUU7WUFDSCxJQUFJO1lBQ0osTUFBTTtTQUNQLElBQ0Q7QUFDSixDQUFDO0FBcEJELGtDQW9CQyJ9