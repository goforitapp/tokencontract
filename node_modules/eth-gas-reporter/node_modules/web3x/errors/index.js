"use strict";
/*
  This file is part of web3x.

  web3x is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  web3x is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with web3x.  If not, see <http://www.gnu.org/licenses/>.
*/
Object.defineProperty(exports, "__esModule", { value: true });
function ErrorResponse(result) {
    var message = !!result && !!result.error && !!result.error.message ? result.error.message : JSON.stringify(result);
    return new Error('Returned error: ' + message);
}
exports.ErrorResponse = ErrorResponse;
function InvalidNumberOfParams(got, expected, method) {
    return new Error('Invalid number of parameters for "' + method + '". Got ' + got + ' expected ' + expected + '!');
}
exports.InvalidNumberOfParams = InvalidNumberOfParams;
function InvalidConnection(host) {
    return new Error("CONNECTION ERROR: Couldn't connect to node " + host + '.');
}
exports.InvalidConnection = InvalidConnection;
function InvalidProvider() {
    return new Error('Provider not set or invalid');
}
exports.InvalidProvider = InvalidProvider;
function InvalidResponse(result) {
    var message = !!result && !!result.error && !!result.error.message
        ? result.error.message
        : 'Invalid JSON RPC response: ' + JSON.stringify(result);
    return new Error(message);
}
exports.InvalidResponse = InvalidResponse;
function ConnectionTimeout(ms) {
    return new Error('CONNECTION TIMEOUT: timeout of ' + ms + ' ms achived');
}
exports.ConnectionTimeout = ConnectionTimeout;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXJyb3JzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7Ozs7Ozs7O0VBZUU7O0FBRUYsU0FBZ0IsYUFBYSxDQUFDLE1BQU07SUFDbEMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxDQUFDLE1BQU0sSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25ILE9BQU8sSUFBSSxLQUFLLENBQUMsa0JBQWtCLEdBQUcsT0FBTyxDQUFDLENBQUM7QUFDakQsQ0FBQztBQUhELHNDQUdDO0FBRUQsU0FBZ0IscUJBQXFCLENBQUMsR0FBRyxFQUFFLFFBQVEsRUFBRSxNQUFNO0lBQ3pELE9BQU8sSUFBSSxLQUFLLENBQUMsb0NBQW9DLEdBQUcsTUFBTSxHQUFHLFNBQVMsR0FBRyxHQUFHLEdBQUcsWUFBWSxHQUFHLFFBQVEsR0FBRyxHQUFHLENBQUMsQ0FBQztBQUNwSCxDQUFDO0FBRkQsc0RBRUM7QUFFRCxTQUFnQixpQkFBaUIsQ0FBQyxJQUFJO0lBQ3BDLE9BQU8sSUFBSSxLQUFLLENBQUMsNkNBQTZDLEdBQUcsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQy9FLENBQUM7QUFGRCw4Q0FFQztBQUVELFNBQWdCLGVBQWU7SUFDN0IsT0FBTyxJQUFJLEtBQUssQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO0FBQ2xELENBQUM7QUFGRCwwQ0FFQztBQUVELFNBQWdCLGVBQWUsQ0FBQyxNQUFNO0lBQ3BDLElBQUksT0FBTyxHQUNULENBQUMsQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBTztRQUNsRCxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPO1FBQ3RCLENBQUMsQ0FBQyw2QkFBNkIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdELE9BQU8sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDNUIsQ0FBQztBQU5ELDBDQU1DO0FBRUQsU0FBZ0IsaUJBQWlCLENBQUMsRUFBRTtJQUNsQyxPQUFPLElBQUksS0FBSyxDQUFDLGlDQUFpQyxHQUFHLEVBQUUsR0FBRyxhQUFhLENBQUMsQ0FBQztBQUMzRSxDQUFDO0FBRkQsOENBRUMifQ==