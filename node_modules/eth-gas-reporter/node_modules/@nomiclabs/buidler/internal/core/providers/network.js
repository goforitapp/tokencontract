"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("../errors");
const wrapper_1 = require("./wrapper");
function createNetworkProvider(provider, chainId) {
    let cachedChainId;
    async function getRealChainId() {
        if (cachedChainId === undefined) {
            cachedChainId = parseInt(await provider.send("net_version"), 10);
        }
        return cachedChainId;
    }
    return wrapper_1.wrapSend(provider, async (method, params) => {
        const realChainId = await getRealChainId();
        if (chainId !== undefined && realChainId !== chainId) {
            throw new errors_1.BuidlerError(errors_1.ERRORS.NETWORK.INVALID_GLOBAL_CHAIN_ID, chainId, realChainId);
        }
        if (method === "eth_sendTransaction") {
            const tx = params[0];
            if (tx !== undefined) {
                if (tx.chainId === undefined) {
                    tx.chainId = realChainId;
                }
                else if (tx.chainId !== realChainId) {
                    throw new errors_1.BuidlerError(errors_1.ERRORS.NETWORK.INVALID_TX_CHAIN_ID, tx.chainId, realChainId);
                }
            }
        }
        return provider.send(method, params);
    });
}
exports.createNetworkProvider = createNetworkProvider;
//# sourceMappingURL=network.js.map